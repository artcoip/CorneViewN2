/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <dt-bindings/zmk/ext_power.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// |  TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  '  | ENT  |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  ?  | CTRL |
//                    | GUI | LWR | SPC |   | SPC | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SQT  &kp RET
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp QMARK &kp RCTRL
                  &kp LGUI &mo 1 &kp SPACE   &kp SPACE &mo 2 &kp RALT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |               lower_layer {
// -----------------------------------------------------------------------------------------
// | EXCL |  @  |  #  |  $  |  %  |  &  |   |  (  |  7  |  8  |  9  |  =  | CALC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 |  ^  |   |  )  |  4  |  5  |  6  |  *  |  -   |
// | REDO | UND | CUT | CPY | PST | PRT |   |  0  |  1  |  2  |  3  |  /  |  +   |
//                    | GUI |     | SPC |   | SPC |     | ALT |
                        bindings = <
   &kp EXCL   &kp AT       &kp HASH     &kp DLLR     &kp PRCNT    &kp AMPS   &kp LPAR &kp N7  &kp N8  &kp N9  &kp EQUAL       &kp K_CALC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &kp CARET  &kp RPAR &kp N4  &kp N5  &kp N6  &kp KP_MULTIPLY &kp MINUS
   &kp K_REDO &kp LC(Z)    &kp LC(X)    &kp LC(C)    &kp LC(V)    &kp LC(P)  &kp N0   &kp N1  &kp N2  &kp N3  &kp FSLH        &kp PLUS
                &kp LGUI        &trans        &kp SPACE        &kp SPACE        &trans        &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  EXT |  F3 |  F4 |  F5 |  F8 |     |   |  [  |  HM | F10 | F11 | F12 |  DEL |
// | CAPS |     |  V+ | MUTE|  V- | NtPd|   |  ]  |  <- |  ^  |  -> |  "  |  >   |
// |      |     | PRV | P/PS| NXT | STP |   |PRTSC| END |  v  |  :  |  ;  |  <   |
//                    | GUI |     | SPC |   | SPC |     | ALT |
                        bindings = <
   &kp C_AC_CLOSE &kp F3 &kp F4       &kp F5     &kp F8        &trans                &kp LBKT  &kp HOME &kp F10  &kp F11   &kp F12  &kp DEL
   &kp CAPS       &trans &kp K_VOL_UP &kp C_MUTE &kp K_VOL_DN  &kp C_AL_TEXT_EDITOR  &kp RBKT  &kp LEFT &kp UP   &kp RIGHT &kp DQT  &kp GT
   &trans         &trans &kp K_PREV   &kp K_PP   &kp K_NEXT    &kp K_STOP2           &kp PSCRN &kp END  &kp DOWN &kp COLON &kp SEMI &kp LT
                             &kp LGUI &trans   &kp SPACE   &kp SPACE   &trans    &kp RALT
                        >;
                };
        };
};
